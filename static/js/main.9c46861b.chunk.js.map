{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","user","className","TodoInfo","prepared","toUpperCase","TodoList","map","todo","preparedTodos","todosList","find","App","useState","setTitle","setUser","setTodos","setCompleted","userAlert","setUserAlert","titleAlert","setTitleAlert","length","onSubmit","event","preventDefault","use","type","value","placeholder","onChange","console","log","target","required","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c46861b.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\n\nimport { User } from '../../types';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (user && (\n    <div>\n      <span data-cy=\"username\" className=\"fs-4\">\n        {`Assigned by: ${user.username}`}\n      </span>\n      <br />\n      <span data-cy=\"email\" className=\"fs-6\">\n        {`Email: ${user.email}`}\n      </span>\n      <br />\n      <span className=\"fs-6\">\n        {`Adress: ${user.address.suite}, ${user.address.street}, ${user.address.city}`}\n      </span>\n      <br />\n      <span className=\"fs-6\">\n        {`Phone: ${user.phone}`}\n      </span>\n    </div>\n  ));\n};\n\n// Create a `UserInfo` component accepting a `user` object and use it to render\n// a `todo.user` in the list with some styling. (Show at least a `name` and an\n// `email` of the `user`)\n\n// Add a default export statement for UserInfo component to use it in the other files\n","import React from 'react';\nimport { PreparedTodos } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  prepared: PreparedTodos,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ prepared }) => {\n  return (\n    <div\n      className=\"\n      card\n      w-50\n      p-4\n      mb-5\n      h-50\n      me-5\n      ms-5\n      border-primary\n      border-opacity-50\n      rounded-3\n      d-flex\n      justify-content-center\n      \"\n      key={prepared.id}\n    >\n      <div\n        data-cy=\"title\"\n        className=\"fs-3 fw-semibold fst-italic mb-3 w-50\"\n      >\n        {prepared.title.toUpperCase()}\n      </div>\n      <div className=\"\n        card-body\n        bg-primary\n        bg-gradient\n        border\n        border-primary\n        rounded-4\n        text-white\n        w-50\n        h-50\n      \"\n      >\n        <div data-cy=\"status\" className=\"fs-3\">\n          {`Completed: ${prepared.completed}`}\n        </div>\n        {prepared.user && (\n          <UserInfo user={prepared.user} />\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Create a `TodoInfo` component accepting a `todo` object and use it in the\n// list to render `title`, `completed` status and `User`\n\n// Add a default export statement for TodoInfo component to use it in the other files\n","import React from 'react';\n\nimport { PreparedTodos } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  prepared: PreparedTodos[],\n};\n\nexport const TodoList: React.FC<Props> = ({ prepared }) => {\n  return (\n    <>\n      {prepared.map((todo: PreparedTodos) => (\n        <div>\n          <TodoInfo prepared={todo} />\n        </div>\n      ))}\n    </>\n  );\n};\n\n// Create a `TodoList` component accepting an array of `preparedTodos` and\n// rendering them as a list\n\n// Add a default export statement for TodoInfo component to use it in the other files\n","/* eslint-disable max-len */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\n\nimport users from './api/users';\nimport todosList from './api/todos';\n\nimport { PreparedTodos } from './types';\n\nimport { TodoList } from './components/TodoList';\n\nconst preparedTodos = todosList.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId) || null,\n}));\n\nconst App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(-1);\n  const [todos, setTodos] = useState([...preparedTodos]);\n  const [completed, setCompleted] = useState(false);\n  const [userAlert, setUserAlert] = useState(false);\n  const [titleAlert, setTitleAlert] = useState(false);\n  const prepared: PreparedTodos[] = [...todos];\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <p>\n        <span>Users: </span>\n        {users.length}\n      </p>\n      <br />\n      <TodoList prepared={prepared} />\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          if (user !== -1 && title !== '') {\n            const todo = {\n              userId: user,\n              id: todos.length + 1,\n              title,\n              completed,\n              user: users.find(use => use.id === user) || null,\n            };\n\n            setTodos([...todos, todo]);\n            setUser(-1);\n            setTitle('');\n            setUserAlert(false);\n            setTitleAlert(false);\n            setCompleted(false);\n          } else if (user === -1 && title !== '') {\n            setUserAlert(true);\n          } else if (title === '' && user !== -1) {\n            setTitleAlert(true);\n          } else if (user === -1 && title === '') {\n            setTitleAlert(true);\n            setUserAlert(true);\n          }\n        }}\n        className=\"form\"\n      >\n        <div className=\"d-inline-block\">\n          <input\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"Set title\"\n            className=\"form-control text-dark\"\n            onChange={\n              (event) => {\n                // eslint-disable-next-line no-console\n                console.log(title);\n                setTitle(event.target.value);\n                setTitleAlert(false);\n              }\n            }\n          />\n          <br />\n          {titleAlert && (\n            <div className=\"d-inline-block border border-danger text-danger w-100\">\n              Please, set title!\n            </div>\n          )}\n        </div>\n\n        <div className=\"d-inline-block\">\n          <select\n            value={user}\n            onChange={\n              (event) => {\n                console.log(user);\n                setUser(+(event.target.value));\n                setUserAlert(false);\n              }\n            }\n            data-cy=\"userSelect\"\n            className=\"form-select mt-3\"\n            required\n          >\n            <option value={-1}>Select User</option>\n            {users.map(use => (\n              <option\n                key={use.id}\n                value={use.id}\n              >\n                {use.username}\n              </option>\n            ))}\n          </select>\n          <br />\n          {userAlert && (\n            <div className=\"d-inline-block border border-danger text-danger w-100\">\n              Select user!\n            </div>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary mb-5\"\n        >\n          Submit\n        </button>\n\n        <br />\n\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={completed}\n            onChange={\n              () => setCompleted(!completed)\n            }\n          />\n          <div className=\"d-inline-block\">Completed</div>\n        </label>\n\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}